# Simple workflow for deploying static content to GitHub Pages
name: Deploy static content to Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["master"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  # Single deploy job since we're just deploying
  deploy:
    permissions: write-all
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@v35
        with:
          files: "docs/*"


      - name: Install Poetry
        if: steps.chaged-files.output.any_changed == 'true'
        run: pipx install poetry
      - name: Install Python
        if: steps.chaged-files.output.any_changed == 'true'
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'
          cache: poetry
      - name: Setup Pages
        if: steps.chaged-files.output.any_changed == 'true'
        uses: actions/configure-pages@v2
      - name: Install local Python package
        if: steps.chaged-files.output.any_changed == 'true'
        run: poetry install --with docs
      - name: Setup Pages
        if: steps.chaged-files.output.any_changed == 'true'
        uses: actions/configure-pages@v3
      - name: Build docs
        if: steps.chaged-files.output.any_changed == 'true'
        run: cd docs && poetry run make html
      - name: Upload artifact
        if: steps.chaged-files.output.any_changed == 'true'
        uses: actions/upload-pages-artifact@v1
        with:
          # Upload entire repository
          path: 'docs/_build/html'
      - name: Deploy to GitHub Pages
        if: steps.chaged-files.output.any_changed == 'true'
        id: deployment
        uses: actions/deploy-pages@v2
